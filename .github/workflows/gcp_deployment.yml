name: Deploy to GCP

on:
  workflow_dispatch:
    inputs:
      docker_image:
        description: 'Docker image to deploy'
        required: true
        type: string
      enable_cluster_configs:
        description: 'Enable cluster configs (-c flag)?'
        required: false
        default: false
        type: boolean

jobs:
  deploy-to-gcp:
    if: github.ref == 'refs/heads/digit-platform'
    runs-on: ubuntu-latest
    env:
      PROJECT_ID: ${{ secrets.GCP_PROJECT_ID }}
      CLUSTER_NAME: ${{ secrets.GKE_CLUSTER_NAME }}
      CLUSTER_ZONE: ${{ secrets.GKE_CLUSTER_ZONE }}
      DOCKER_IMAGE: ${{ inputs.docker_image }}
      ENABLE_CLUSTER_CONFIGS: ${{ inputs.enable_cluster_configs }}
    steps:
      - name: Checkout repo
        uses: actions/checkout@v4

      - name: Authenticate to GCP
        uses: google-github-actions/auth@v2
        with:
          credentials_json: ${{ secrets.GCP_SERVICE_ACCOUNT_KEY }}

      - name: Set up gcloud CLI
        uses: google-github-actions/setup-gcloud@v2
        with:
          project_id: ${{ secrets.GCP_PROJECT_ID }}
          export_default_credentials: true

      - name: Install gke-gcloud-auth-plugin
        run: |
          gcloud components install gke-gcloud-auth-plugin

      - name: Get GKE credentials
        run: |
          gcloud container clusters get-credentials "$CLUSTER_NAME" --zone "$CLUSTER_ZONE" --project "$PROJECT_ID"
          cat ~/.kube/config > kubeconfig

      - name: Verify kubectl configuration
        run: kubectl config view

      - name: Verify cluster node access
        run: kubectl get nodes

      - name: Install sops
        run: |
          sudo apt update
          sudo apt install -y gnupg
          wget https://github.com/mozilla/sops/releases/download/v3.7.1/sops-v3.7.1.linux
          chmod +x sops-v3.7.1.linux
          sudo mv sops-v3.7.1.linux /usr/local/bin/sops

      - name: Digit deployment
        run: |
          if [ "$ENABLE_CLUSTER_CONFIGS" = "true" ]; then
            go run main.go -c -e digit-platform "$DOCKER_IMAGE"
          else
            go run main.go -e digit-platform "$DOCKER_IMAGE"
          fi
        working-directory: deploy-as-code/deployer
