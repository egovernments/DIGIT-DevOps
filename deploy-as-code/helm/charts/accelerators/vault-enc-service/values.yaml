# Common Labels
labels:
  app: "vault-enc-service"
  group: "core"

# Ingress Configs
ingress:
  enabled: true
  zuul: true
  context: "vault-enc-service"

# Init Containers Configs
initContainers:
  dbMigration:
    enabled: true
    schemaTable: "vault-enc-service_schema"
    image:
      repository: "vault-enc-service-db"

# Container Configs
image:
  repository: "vault-enc-service"
replicas: "1"
# healthChecks:
#   enabled: true
#   livenessProbePath: "/vault-enc-service/health"
#   readinessProbePath: "/vault-enc-service/health"
appType: "java-spring"
tracing-enabled: true
healthChecks:
  enabled: true
  livenessProbePath: "/vault-enc-service/health"
  readinessProbePath: "/vault-enc-service/health"
heap: "-Xmx256m -Xms256m"
memory_limits: 512Mi
java-args: "-Dspring.profiles.active=monitoring"
mdms-path: "/mdms-v2/v1/_search"
master-password-provider: software

# Additional Container Envs
env: |
  - name: SERVER_PORT
    value: "8080"
  - name: JAVA_OPTS
    value: {{ index .Values "heap" | quote }}
  - name: JAVA_ARGS
    value: {{ index .Values "java-args" | quote }}
  - name: EGOV_MDMS_HOST
    valueFrom:
      configMapKeyRef:
        name: egov-service-host
        key: mdms-service-v2
  - name: EGOV_MDMS_SEARCH_ENDPOINT
    value: {{ index .Values "mdms-path" | quote }}
  - name: EGOV_STATE_LEVEL_TENANT_ID
    valueFrom:
      configMapKeyRef:
        name: egov-config
        key: egov-state-level-tenant-id
  - name: SECURITY_BASIC_ENABLED
    value: "false"
  - name: MANAGEMENT_SECURITY_ENABLED
    value: "false"
  - name: SERVER_CONTEXT_PATH
    value: /vault-enc-service
  - name: MASTER_PASSWORD_PROVIDER
    value: {{ index .Values "master-password-provider" | quote }}
  {{- if index .Values "number-of-symmetric-keys-per-tenant" }}
  - name: NUMBER_OF_SYMMETRIC_ACTIVE_KEYS_PER_TENANT
    value: {{ index .Values "number-of-symmetric-keys-per-tenant" | quote }}
  {{- end }}
  {{- if eq (index .Values "master-password-provider") "software" }}
  - name: MASTER_PASSWORD
    valueFrom:
      secretKeyRef:
        name: egov-enc-service
        key: master.password
  - name: MASTER_SALT
    valueFrom:
      secretKeyRef:
        name: egov-enc-service
        key: master.salt
  - name: MASTER_INITIALVECTOR
    valueFrom:
      secretKeyRef:
        name: egov-enc-service
        key: master.initialvector
  {{- end }}
  {{- if eq (index .Values "master-password-provider") "awskms" }}
  - name: AWS_KMS_REGION
    value: {{ index .Values "aws-kms-region" | quote }}
  - name: AWS_KMS_ACCESS_KEY
    valueFrom:
      secretKeyRef:
        name: egov-enc-service
        key: aws-kms-access-key
  - name: AWS_KMS_SECRET_KEY
    valueFrom:
      secretKeyRef:
        name: egov-enc-service
        key: aws-kms-secret-key
  - name: AWS_KMS_MASTER_PASSWORD_KEY_ID
    value: {{ index .Values "aws-kms-master-password-key-id" | quote }}
  {{- end }}
  - name: VAULT_URL
    valueFrom:
      configMapKeyRef:
        name: egov-service-host
        key: vault-host
  - name: VAULT_ENCRYPT_PATH
    value: encrypt
  - name: VAULT_HOST
    valueFrom:
      configMapKeyRef:
        name: egov-service-host
        key: vault-host
  - name: VAULT_TRANSIT_BASE_PATH
    value: v1/transit/
  - name: VAULT_SYS_MOUNT_TRANSIT_PATH
    value: v1/sys/mounts/transit
  - name: VAULT_KEY_CREATE_PATH
    value: keys/
  - name: VAULT_ASYM_SUFFIX
    value: -asym
  - name: VAULT_ASYM_ENCRYPT_PATH
    value: encrypt/
  - name: VAULT_AUTH_KUBERNETES_LOGIN_PATH
    value: v1/auth/kubernetes/login
  - name: VAULT_AUTH_KUBERNETES_ROLE
    value: enc-service-role
  - name: VAULT_K8S_TOKEN_PATH
    value: /var/run/secrets/kubernetes.io/serviceaccount/token
  - name: VAULT_SIGN_PATH
    value: sign/
  - name: VAULT_VERIFY_PATH
    value: verify/
  - name: VAULT_DECRYPT_PATH
    value: decrypt/
