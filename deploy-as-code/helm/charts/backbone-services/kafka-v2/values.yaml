
name: kafka-v2
namespace: kafka-cluster
replicas: 3
zookeeperHosts: "zookeeper-v2.zookeeper-cluster:2181/kafka-v2"

image:
  pullPolicy: IfNotPresent  
  repository: confluentinc/cp-kafka
  tag: 5.2.2


imagePullPolicy: IfNotPresent

## Specify an array of imagePullSecrets. 
## Secrets must be manually created in the namespace.
## ref: https://kubernetes.io/docs/concepts/containers/images/#specifying-imagepullsecrets-on-a-pod
imagePullSecrets:

## StatefulSet Config
## Start and stop pods in Parallel or OrderedReady (one-by-one.)
## ref: https://kubernetes.io/docs/tutorials/stateful-application/basic-stateful-set/#pod-management-policy
podManagementPolicy: Parallel

## The StatefulSet Update Strategy which Zookeeper will use when changes are applied: OnDelete or RollingUpdate
## ref: https://kubernetes.io/docs/concepts/workloads/controllers/statefulset/#update-strategies
updateStrategy: OnDelete

tickTime: 2000
syncLimit: 5
initLimit: 10
maxClientCnxns: 60
autoPurgeSnapRetainCount: 3
autoPurgePurgeInterval: 24


heapOptions: "-Xms704M -Xmx704M"
memory_limits: 1408Mi
logDirs: "/opt/kafka-data/logs"
listenerSecurity: "PLAINTEXT:PLAINTEXT,EXTERNAL:PLAINTEXT"
lingerMs: "250"
numberPartitions: "3"
replicationFactor: "2"
minInsyncReplicas: "1"
offsetsReplicationFactor: "3"


## Persistent Volumes
## ref: https://kubernetes.io/docs/concepts/storage/persistent-volumes/
persistence:
  enabled: false
  # aws:
  #   - volumeId: value
  #     zone: ap-south-1a
  #   - volumeId: value
  #     zone: ap-south-1b
  #   - volumeId: value
  #     zone: ap-south-1c 

  # azure:
  #   - diskName: kafka-0
  #     diskUri: /subscriptions/b4e1aa53-c521-44e6-8a4d-5ae107916b5b/resourceGroups/MC_egov-micro-dev_egov-micro-dev_southindia/providers/Microsoft.Compute/disks/kafka-0
  #   - diskName: kafka-1
  #     diskUri: /subscriptions/b4e1aa53-c521-44e6-8a4d-5ae107916b5b/resourceGroups/MC_egov-micro-dev_egov-micro-dev_southindia/providers/Microsoft.Compute/disks/kafka-1
  #   - diskName: kafka-2
  #     diskUri: /subscriptions/b4e1aa53-c521-44e6-8a4d-5ae107916b5b/resourceGroups/MC_egov-micro-dev_egov-micro-dev_southindia/providers/Microsoft.Compute/disks/kafka-2 

  #openstack:
  #  - f37a03aa-6212-4c62-a805-9ce139fab180
  #  - f37a03aa-6212-4c62-a805-9ce139fab180
  #  - f37a03aa-6212-4c62-a805-9ce139fab180
  
  dataDirSize: 50Gi


## Pod Compute Resources
## ref: https://kubernetes.io/docs/concepts/configuration/manage-compute-resources-container/

# We usually recommend not to specify default resources and to leave this as a conscious
# choice for the user. This also increases chances charts run on environments with little
# resources, such as Minikube. If you do want to specify resources, uncomment the following
# lines, adjust them as necessary, and remove the curly braces after 'resources:'.
resources: |
  requests:
    memory: {{ .Values.memory_limits | quote }}
    cpu: 500m
  limits:
    memory: {{ .Values.memory_limits | quote }} 

## Custom pod annotations
podAnnotations: {}

## Node labels for pod assignment
## Ref: https://kubernetes.io/docs/concepts/configuration/assign-pod-node/
nodeSelector: {}

## Taints to tolerate on node assignment:
## Ref: https://kubernetes.io/docs/concepts/configuration/taint-and-toleration/
tolerations: {}

## Monitoring
## Zookeeper JMX Settings
## ref: https://docs.confluent.io/current/installation/docker/docs/operations/monitoring.html
#jmx:
#  port: 5555

## Prometheus Exporter Configuration
## ref: https://prometheus.io/docs/instrumenting/exporters/
prometheus:
  ## JMX Exporter Configuration
  ## ref: https://github.com/prometheus/jmx_exporter
  jmx:
    enabled: false
    image: solsson/kafka-prometheus-jmx-exporter@sha256
    imageTag: 6f82e2b0464f50da8104acd7363fb9b995001ddff77d248379f8788e78946143
    imagePullPolicy: IfNotPresent
    port: 5556

    ## Resources configuration for the JMX exporter container.
    ## See the `resources` documentation above for details.
    resources: {}  