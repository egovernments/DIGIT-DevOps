# Common Labels
labels:
  app: "oauth2-proxy"

namespace: egov
replicas: 1

image:
  repository: "quay.io/pusher/oauth2_proxy"
  tag: "v5.1.0"
  pullPolicy: "IfNotPresent"

# Ingress Configs
ingress:
  enabled: true
  context: "oauth2"  

httpPort: 4180
# Optionally specify an array of imagePullSecrets.
# Secrets must be manually created in the namespace.
# ref: https://kubernetes.io/docs/concepts/containers/images/#specifying-imagepullsecrets-on-a-pod
# imagePullSecrets:
  # - name: myRegistryKeySecretName

# Cookie Secret openssl rand -base64 32 | head -c 32 | base64

extraArgs:
  provider: github

healthChecks:
  enabled: true
  livenessProbePath: "/ping"
  readinessProbePath: "/ping"  

args: |
  - --http-address=0.0.0.0:4180
  {{- range $key, $value := .Values.extraArgs }}
  {{- if $value }}
  - --{{ $key }}={{ $value }}
  {{- else }}
  - --{{ $key }}
  {{- end }}
  {{- end }}
  {{- if or .Values.config.existingConfig .Values.config.configFile }}
  - --config=/etc/oauth2_proxy/oauth2_proxy.cfg
  {{- end }}

extraVolumes: |
  - configMap:
      defaultMode: 420
      name: {{ template "common.name" . }}
    name: configmain

extraVolumeMounts: |
  - mountPath: /etc/oauth2_proxy
    name: configmain

env: |
  - name: OAUTH2_PROXY_CLIENT_ID
    valueFrom:
      secretKeyRef:
        name:  {{ template "common.name" . }}
        key: client-id
  - name: OAUTH2_PROXY_CLIENT_SECRET
    valueFrom:
      secretKeyRef:
        name:  {{ template "common.name" . }}
        key: client-secret
  - name: OAUTH2_PROXY_COOKIE_SECRET
    valueFrom:
      secretKeyRef:
        name:  {{ template "common.name" . }}
        key: cookie-secret

resources: |
  requests:
    memory: 300Mi
    cpu: 100m
  limits:
    memory: 300Mi
    cpu: 100m

# Oauth client configuration specifics
config:
  configFile: |-
    email_domains = [ "*" ]
    github_org = "egovernments" 
    github_team = "micro-service-dev"
    upstreams = [ "file:///dev/null" ]
  # Custom configuration file: oauth2_proxy.cfg
  # configFile: |-
  #   pass_basic_auth = false
  #   pass_access_token = true
  # Use an existing config map (see configmap.yaml for required fields)
  # Example:
  # existingConfig: config
