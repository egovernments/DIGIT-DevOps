{{- $envOverrides := index .Values (tpl (default .Chart.Name .Values.name) .) -}} 
{{- $baseValues := .Values | deepCopy -}}
{{- $values := dict "Values" (mustMergeOverwrite $baseValues $envOverrides) -}}
{{- with mustMergeOverwrite . $values -}}
{{- if .Values.persistence.enabled }}  
{{- range $idx, $v := until (int .Values.replicas) }}
apiVersion: v1
kind: PersistentVolume
metadata:
  name: "zookeeper-data-{{ template "name" $ }}-{{ $idx }}"
  labels:
    app: {{ template "name" $ }}
{{- if $.Values.persistence.aws }}   
    failure-domain.beta.kubernetes.io/zone: {{ index $.Values "persistence" "aws" $idx "zone" }}
    topology.kubernetes.io/zone: {{ index $.Values "persistence" "aws" $idx "zone" }}
{{- end }}     
spec:
 capacity:
    storage: {{ $.Values.persistence.dataDirSize | quote }}  
 accessModes:
    - ReadWriteOnce
 persistentVolumeReclaimPolicy: Retain
 claimRef:
    namespace: {{ $.Values.namespace }}  
    name: "zookeeper-data-{{ template "name" $ }}-{{ $idx }}"
{{- if $.Values.persistence.aws }}
 awsElasticBlockStore:
    volumeID: {{ index $.Values "persistence" "aws" $idx "volumeId" }}
    fsType: ext4
{{- end }} 
{{- if $.Values.persistence.azure }}
 azureDisk:
    cachingMode: ReadWrite
    diskName: {{ index $.Values "persistence" "azure" $idx "diskName" }}
    diskURI: {{ index $.Values "persistence" "azure" $idx "diskUri" }}
    kind: Managed
    fsType: ext4 
{{- end }}     
{{- if $.Values.persistence.openstack }}
 cinder: 
    fsType: "ext4" 
    volumeID: {{ index $.Values "persistence" "openstack" $idx }}
{{- end }}   
{{- if $.Values.persistence.iscsi }}
 iscsi:
   targetPortal: {{ index $.Values "persistence" "iscsi" "targetPortal" }} 
   iqn: {{ index $.Values "persistence" "iscsi" "iqn" $idx }}
   lun: 0
   fsType: 'ext4'
   readOnly: true  
{{- end }}       
---
{{- end }}
{{- end }}
{{- end }}