# wordpress Labels
labels:
  app: "wordpress"
  group: "web"
namespace: egov

wordpressUsername: admin
wordpressEmail: nikesh.umredkar@egovernments.org
wordpressFirstName: FirstName
wordpressLastName: LastName
wordpressBlogName: User's Blog!
wordpressSkipInstall: false
htaccessPersistenceEnabled: no
htaccessOverrideNone: no
wordpressScheme: http
allowEmptyPassword: yes
wordpressdbhost: mysql.egov
wordpressDatabaseName: bhdatabase
wordpressDatabaseUser: root

# Container Configs
image:
  repository: nikeshumredkar/wordpress
  tag: latest     
replicas: "1"
httpPort: 80
healthChecks:
  enabled: true
  livenessProbePath: "/wp-login.php"
  readinessProbePath: "/wp-login.php"

## WordPress containers' resource requests and limits
resources: |
  limits: 
    memory: 512Mi
    cpu: 300m
  requests:
    memory: 512Mi
    cpu: 300m

env: |
  - name: ALLOW_EMPTY_PASSWORD
    value: {{ index .Values "allowEmptyPassword" | quote }}
  - name: WORDPRESS_DB_HOST
    value: {{ index .Values "wordpressdbhost" | quote }}
  - name: WORDPRESS_DB_NAME
    value: {{ index .Values "wordpressDatabaseName" | quote }}
  - name: WORDPRESS_DB_USER
    value: {{ index .Values "wordpressDatabaseUser" | quote }}
  - name: WORDPRESS_DB_PASSWORD
    valueFrom:
      secretKeyRef:
        name: mysql
        key: mysql-password
  - name: WORDPRESS_USERNAME
    value: {{ index .Values "wordpressUsername" | quote }}
  - name: WORDPRESS_PASSWORD
    valueFrom:
      secretKeyRef:
        name: wordpress
        key: wordpress-password
  - name: WORDPRESS_EMAIL
    value: {{ index .Values "wordpressEmail" | quote }}
  - name: WORDPRESS_FIRST_NAME
    value: {{ index .Values "wordpressFirstName" | quote }}
  - name: WORDPRESS_LAST_NAME
    value: {{ index .Values "wordpressLastName" | quote }}
  - name: WORDPRESS_HTACCESS_OVERRIDE_NONE
    value: {{ index .Values "htaccessOverrideNone" | quote }}
  - name: WORDPRESS_HTACCESS_PERSISTENCE_ENABLED
    value: {{ index .Values "htaccessPersistenceEnabled" | quote }}
  - name: WORDPRESS_BLOG_NAME
    value: {{ index .Values "wordpressBlogName" | quote }}
  - name: WORDPRESS_SKIP_INSTALL
    value: {{ index .Values "wordpressSkipInstall" | quote }}
  - name: WORDPRESS_SCHEME
    value: {{ index .Values "wordpressScheme" | quote }}

persistence:
  enabled: true
  aws:
    volumeId: "vol-02b9bae47bacc586b"
  ## wordpress data Persistent Volume Storage Class
  storageClassName: default
  ## If set to "-", storageClassName: "", which disables dynamic provisioning
  ## If undefined (the default) or set to null, no storageClassName spec is
  ##   set, choosing the default provisioner.  (gp2 on AWS, standard on
  ##   GKE, AWS & OpenStack)
  ##
  # storageClass: "-"
  ##
  ## If you want to reuse an existing claim, you can pass the name of the PVC using
  ## the existingClaim variable
  # existingClaim: your-claim
  accessMode: ReadWriteOnce
  dataDirSize: 10Gi 
  volumeMode: Filesystem

extraVolumeMounts: |
  - mountPath: /var/www/html
    name: wordpress-data
    subPath: html
extraVolumes: |
  - name: wordpress-data
    persistentVolumeClaim:
      claimName: wordpress-data

# Ingress Configs
ingress:
  enabled: true
  zuul: false
  waf: 
    enabled: false
  hostName: bihar-portal-beta.egovernments.org  
  context: ""

# Init Containers Configs
initContainers: {}

