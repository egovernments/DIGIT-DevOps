{{- define "common.deployment" -}}
{{- if .Capabilities.APIVersions.Has "apps/v1" }}
apiVersion: apps/v1
{{- else }}
apiVersion: extensions/v1beta1
{{- end }}
kind: Deployment
metadata:
  name: {{ template "common.name" . }}
  namespace: {{ .Values.namespace }}
  labels:
{{- include "common.labels" . | nindent 4 }}   
spec:
{{- if .Capabilities.APIVersions.Has "apps/v1" }}
  selector:
    matchLabels:
      {{- include "common.labels" . | nindent 6 }}  
{{- end }}
{{- $persistence := .Values.persistence | default dict -}}
{{- if and (not (hasKey $persistence "enabled")) (eq (.Values.replicas | int) 1) }}
  strategy:
    rollingUpdate:
      maxUnavailable: 0
{{- end }}     
  replicas: {{ .Values.replicas }}
  template:
    metadata:  
      annotations:
      {{- if not .Values.disableAnnotationTimestamp }}      
        deployment-timestamp: "{{ date "20060102150405" .Release.Time }}"    
      {{- end }}          
      {{- if .Values.additionalAnnotations }}                                   
        {{- tpl  .Values.additionalAnnotations . | nindent 8 }}
      {{- end }}        
      labels:
      {{- include "common.labels" . | nindent 8 }}            
    spec:
    {{- if .Values.initContainers.gitSync.enabled }}
      securityContext:
        fsGroup: 65533 # to make SSH key readable 
    {{- end }} 
    {{- if or .Values.initContainers.gitSync.enabled .Values.extraVolumes }}     
      volumes:  
    {{- if .Values.initContainers.gitSync.enabled }}  
      - name: git-secret
        secret:
          secretName: git-creds
          defaultMode: 288 # = mode 0440
      - name: workdir
        emptyDir: {}               
    {{- end }}     
      {{- with .Values.extraVolumes }}
        {{- tpl . $ | nindent 6 }}
      {{- end }}     
    {{- end }}        
    {{- if .Values.affinity.preferSpreadAcrossAZ }}
      affinity:
        podAntiAffinity:
          preferredDuringSchedulingIgnoredDuringExecution:
          - weight: 100
            podAffinityTerm:
              topologyKey: "failure-domain.beta.kubernetes.io/zone"
              labelSelector:
                matchLabels:
                {{- include "common.labels" . | nindent 18 }}     
    {{- end }}  
    {{- if .Values.serviceAccount }}
      serviceAccountName: {{ .Values.serviceAccount }}    
    {{- end }}     
      initContainers:
      {{- with .Values.initContainers.extraInitContainers }}
        {{- tpl . $ | nindent 8 }}
      {{- end }}
      {{- if .Values.initContainers.dbMigration.enabled }}
      {{ with .Values.initContainers.dbMigration}}
      - name: "db-migration"
        image: {{ template "common.image" (dict "Values" $.Values "repository" .image.repository "tag" .image.tag) }}
        imagePullPolicy: {{ .image.pullPolicy }} 
      {{- end }}    
        {{- if .Values.initContainers.dbMigration.env }}               
        env: 
          {{- tpl  .Values.initContainers.dbMigration.env . | nindent 12 }}
        {{- end }}
      {{- end }}        
      {{- if .Values.initContainers.gitSync.enabled }}
      {{ with .Values.initContainers.gitSync }}
      - name: "git-sync"
        image: {{ template "common.image" (dict "Values" $.Values "repository" .image.repository "tag" .image.tag) }}
        imagePullPolicy: {{ .image.pullPolicy }}   
      {{- end }}
        securityContext:
          runAsUser: 65533 # git-sync user
        volumeMounts:
        - name: git-secret
          mountPath: /etc/git-secret              
        - name: workdir
          mountPath: "/work-dir"                   
        {{- if .Values.initContainers.gitSync.env }}               
        env: 
          {{- tpl  .Values.initContainers.gitSync.env . | nindent 12 }}
        {{- end }}        
      {{- end }}            
      containers:
      {{- with .Values.extraContainers }}
        {{- tpl . $ | nindent 8 }}
      {{- end }}      
        - name: {{ template "common.name" . }}
          image: {{ template "common.image" (dict "Values" $.Values "repository" .Values.image.repository "tag" .Values.image.tag) }}
          imagePullPolicy: {{ .Values.image.pullPolicy }}  
      {{- if .Values.args }}              
          args:  
          {{- tpl  .Values.args . | nindent 12 }}          
       {{- end }}             
          ports:
            - name: http
              containerPort: {{ .Values.httpPort }}
              protocol: TCP
      {{- if .Values.healthChecks.enabled }}              
          readinessProbe:
          {{- tpl  .Values.healthChecks.readinessProbe . | nindent 12 }} 
          livenessProbe:
          {{- tpl  .Values.healthChecks.livenessProbe . | nindent 12 }}                      
       {{- end }}       
        {{- if .Values.lifecycle }}
          lifecycle:
          {{- toYaml .Values.lifecycle | nindent 12 }}
        {{- end }}      
        {{- if or .Values.initContainers.gitSync.enabled .Values.extraVolumeMounts }}
          volumeMounts:              
        {{- if .Values.initContainers.gitSync.enabled }}            
          - name: workdir
            mountPath: "/work-dir"
        {{- end }}             
        {{- with .Values.extraVolumeMounts }}
          {{- tpl . $ | nindent 10 }}
        {{- end }}          
        {{- end }}     
      {{- if or .Values.env (eq .Values.appType "java-spring") (index .Values "global" "tracing-enabled") }}                         
          env:  
        {{- if .Values.env }}                                   
          {{- tpl  .Values.env . | nindent 12 }}
        {{- end -}}         
        {{- if eq .Values.appType "java-spring" }} 
          {{- tpl  .Values.extraEnv.java . | nindent 12 }}         
        {{- end -}} 
        {{- if or (index .Values "global" "tracing-enabled") (index .Values "tracing-enabled") }} 
          {{- tpl  .Values.extraEnv.jaeger . | nindent 12 }}         
        {{- end }}
      {{- end }}
      {{- if .Values.resources }}                                     
          resources:
            {{- tpl .Values.resources . | nindent 12 }}
      {{- end }}            
    {{- with .Values.nodeSelector }}
      nodeSelector:
{{ toYaml . | indent 8 }}
    {{- end }}
    {{- with .Values.tolerations }}
      tolerations:
{{ toYaml . | indent 8 }}
    {{- end }}
{{- end -}}
