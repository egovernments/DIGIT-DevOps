global:
  domain: ifix-qa.ifix.org.in
  tracing-enabled: false
  namespace: ifix
  nodepool:
    nodeAffinity: true
    selector: ifix-qa-ng
    toleration: ifix-qa-ng

cluster-configs:
  namespaces:
    create: false
    values:
      [ 
        ifix, 
        cert-manager,
        olap
      ]

  rbac:
    - role: user
      namespaces: [ifix]
    - role: admin
      namespaces: [ifix]

  root-ingress:
    cert-issuer: letsencrypt-prod
  configmaps:
    egov-config:
      data:
        mongo-db-host: "ifix-db.cluster-cqqfmghbjssw.ap-south-1.docdb.amazonaws.com"
        mongo-db-name: "ifix_qa_db"
        mongo-db-url: "mongodb://ifix-db.cluster-cqqfmghbjssw.ap-south-1.docdb.amazonaws.com:27017/?retryWrites=false"
        db-host: "postgres.ifix"
        db-name: "ifix_qa_db"
        keycloak-db-name: "keycloak_qa_db"
        db-url: "jdbc:postgresql://postgres.ifix:5432/ifix_qa_db"
        domain: "ifix-qa.ifix.org.in"
        egov-services-fqdn-name: "https://ifix-qa.ifix.org.in/"
        egov-state-level-tenant-id: "pb"
        flyway-locations: "filesystem:/flyway/sql,filesystem:/flyway/seed,filesystem:/flyway/qa"
        kafka-brokers: "kafka-v2.ifix:9092"
        kafka-infra-brokers: "kafka-v2.ifix:9092"
        logging-level-jdbc: "debug"
        serializers-timezone-in-ist: "true"
        server-tomcat-max-threads: "10"
        server-tomcat-max-connections: "500"
        spring-datasource-tomcat-initialSize: "1"
        spring-datasource-tomcat-max-active: "5"
        spring-jpa-show-sql: "true"
        tracer-errors-provideexceptionindetails: "true"
        timezone: "Asia/Kolkata"
        druid-host: "druid-broker.olap"

    egov-service-host:
      data:
        ifix-master-data-service: "http://ifix-master-data-service.ifix:8080/"
        fiscal-event-service: "http://fiscal-event-service.ifix:8080/"
        ifix-zuul: "http://ifix-zuul.ifix:8080/"
        ifix-department-entity-service: "http://ifix-department-entity-service.ifix:8080/"
        keycloak: "http://keycloak.ifix:8080/"

ifix-master-data-service:
  server-context-path: "/ifix-master-data"

fiscal-event-service:
  fiscal-kafka-push-topic: "fiscal-event-request-validated"

fiscal-event-post-processor:
  fiscal-event-kafka-push-topic: "fiscal-event-request-validated"
  fiscal-event-kafka-dereferenced-topic: "fiscal-event-request-dereferenced"
  fiscal-event-kafka-flattened-topic: "fiscal-event-line-item-flattened"
  fiscal-event-processor-kafka-mongodb-topic: "fiscal-event-mongodb-sink"
  fiscal-event-processor-kafka-druid-topic: "fiscal-event-druid-sink"
  
ifix-zuul:
  replicas: 1
  custom-filter-property: "false"
  tracing-enabled: "true"
  heap: "-Xmx704m -Xms512m"
  server-tomcat-max-threads: "350"
  server-tomcat-max-connections: "1500"
  egov-open-endpoints-whitelist: "/ifix-master-data/government/v1/_search,/ifix-master-data/chartOfAccount/v1/_search,/ifix-master-data/department/v1/_search,/ifix-master-data/expenditure/v1/_search,/ifix-master-data/project/v1/_search,/ifix-department-entity/departmentEntity/v1/_search,/ifix-department-entity/departmentEntity/hierarchyLevel/v1/_search"
  egov-mixed-mode-endpoints-whitelist: ""
  
fiscal-event-aggregator:
  aggregator-topic-name: "aggregated-fiscal-event"
  aggregator-datasource-name: "fiscal-event"

mongodb-kafka-source-connector:
  mongodb-collection-name: "fiscal_event"
  kafka-topic: "fiscal-event-request-dereferenced"

druid:
  domain: druid-qa.ifix.org.in
  druids3: ifix-druid-qa-assets

metabase:
  domain: metabase-qa.ifix.org.in
  siteUrl: metabase-qa.ifix.org.in


# redis >>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>
redis:
  replicas: 1
  images:
    - egovio/redis:3.2
# <<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<

kafka-v2:
  persistence:
    enabled: true
    aws:
      - volumeId: "vol-0bf50431131787b2c"
        zone: ap-south-1a
      - volumeId: "vol-05c6c776c1eb91d2a"
        zone: ap-south-1a
      - volumeId: "vol-031194d1fac5a24c0"
        zone: ap-south-1a
  zookeeperHosts: "zookeeper-v2.ifix:2181/kafka-v2"

  heapOptions: "-Xms704M -Xmx704M"
  memory_limits: 1408Mi
  lingerMs: "250"
  numberPartitions: "3"
  replicationFactor: "2"
  minInsyncReplicas: "1"
  offsetsReplicationFactor: "3"

# <<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<
kafka-connect:
 image:
   repository: kafka-connect-mongo
   tag: 1.5.1

# zookeeper-v2 >>>>>>>>>>>>>>>>>>>>>>>>>>>>>
zookeeper-v2:
  persistence:
    enabled: true
    aws:
      - volumeId: "vol-0e7b4956b957b93a3"
        zone: ap-south-1a
      - volumeId: "vol-05cd9010777871915"
        zone: ap-south-1a
      - volumeId: "vol-03d4517b9b0c29415"
        zone: ap-south-1a

  ## Zookeeper JVM Heap Option
  heapOptions: "-Xms256M -Xmx256M"
  resources:
    # We usually recommend not to specify default resources and to leave this as a conscious
    # choice for the user. This also increases chances charts run on environments with little
    # resources, such as Minikube. If you do want to specify resources, uncomment the following
    # lines, adjust them as necessary, and remove the curly braces after 'resources:'.
    limits:
      cpu: 300m
      memory: 384Mi
    requests:
      cpu: 300m
      memory: 384Mi


# <<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<

playground:
  replicas: 1
  images:
    - egovio/playground:mongo-v1

postgres:
  postgresDatabase: ifix_qa_db
  persistence:
    enabled: true
    aws:
      volumeId: "vol-0b62ac5eb48fe9987"